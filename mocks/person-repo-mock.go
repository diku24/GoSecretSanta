//Code generated by MockGen. Do NOT EDIT.
// Source: repository/person-repo.go

// Pacakage mocks is a generated GoMock package.
package mocks

import (
	entity "SecretSanta/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

//MockPersonRepository is a mock of the PersonRepository interface
type MockPersonRepository struct {
	ctrl     *gomock.Controller
	recorder *MockPersonRepositoryMockRecorder
}

// MockPersonRepositoryMockRecorder is the mock recorder for MockPersonRepository.
type MockPersonRepositoryMockRecorder struct {
	mock *MockPersonRepository
}

// NewMockPersonRepository creates a new mock instance.
func NewMockPersonRepository(ctrl *gomock.Controller) *MockPersonRepository {
	mock := &MockPersonRepository{ctrl: ctrl}
	mock.recorder = &MockPersonRepositoryMockRecorder{mock}
	return mock
}

//EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonRepository) EXPECT() *MockPersonRepositoryMockRecorder {
	return m.recorder
}

// AllocateSanta mocks base method.
func (m *MockPersonRepository) AllocateSanta() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllocateSanta")
	ret0, _ := ret[0].(error)
	return ret0
}

//AllocateSanta indicate an expceted call of AllocateSanta.
func (mr *MockPersonRepositoryMockRecorder) AllocateSanta() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllocateSanta", reflect.TypeOf((*MockPersonRepository)(nil).AllocateSanta))
}

// GetAllWishes mocks base method.
func (m *MockPersonRepository) GetAllWishes() ([]entity.PersonWish, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWishes")
	ret0, _ := ret[0].([]entity.PersonWish)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWishes indicates an expected call of GetAllWishes.
func (mr *MockPersonRepositoryMockRecorder) GetAllWishes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWishes", reflect.TypeOf((*MockPersonRepository)(nil).GetAllWishes))
}

// SavePerson mocks base methods
func (m *MockPersonRepository) SavePerson(personWish *entity.PersonWish) (*entity.PersonWish, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SavePerson", personWish)
	ret0, _ := ret[0].(*entity.PersonWish)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SavePerson indicates an expected call of SavePerson
func (mr *MockPersonRepositoryMockRecorder) SavePerson(personWish interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePerson", reflect.TypeOf((*MockPersonRepository)(nil).SavePerson), personWish)
}
